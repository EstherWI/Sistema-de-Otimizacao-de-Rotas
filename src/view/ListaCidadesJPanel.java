/** ***************************************************************************************
 * Autora: Esther de Santana Araújo e Ariana de Jesus Santos Pereira
 * Componente Curricular: MI-Programação
 * Concluido em: 08/02/2019
 * Declaro que este código foi elaborado por nós de forma individual e não contém nenhum
 * trecho de código de outro colega ou de outro autor, tais como provindos de livros e
 * apostilas, e páginas ou documentos eletrônicos da Internet. Qualquer trecho de código
 * de outra autoria que não a minha está destacado com uma citação para o autor e a fonte
 * do código, e estou ciente que estes trechos não serão considerados para fins de avaliação.
 ***************************************************************************************** */
package view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import util.Vertice;
import roteirização.Controller;

/**
 *
 * @author Esther Araújo e Ariana Pereira
 */
public class ListaCidadesJPanel extends javax.swing.JPanel {

    private javax.swing.JCheckBox[] jCheckBox = new javax.swing.JCheckBox[30];
    private java.awt.GridBagConstraints gridBagConstraints;
    private Controller controller;
    /**
     * Creates new form InfoJPanel
     */
    public ListaCidadesJPanel(){
        initComponents();
    }

    public void setController(Controller controller) {
        this.controller = controller;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Cidades disponíveis");
        add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridBagLayout());
        jScrollPane1.setViewportView(jPanel2);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Cria o CheckBox a partir da lista dos vertices
     * @param nomeCidade
     */
    public void addCheckBox(List<Vertice> nomeCidade){
       for (int i = 1; i < 30; i++) {
           jCheckBox[i] = new javax.swing.JCheckBox(nomeCidade.get(i).getCidade().getNome());
          
           gridBagConstraints = new java.awt.GridBagConstraints();
           gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
           gridBagConstraints.gridx = 0;
           gridBagConstraints.gridy = i;
           jPanel2.add(jCheckBox[i], gridBagConstraints);

           jCheckBox[i].addActionListener(new Acao(i));
       } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private class Acao implements ActionListener {

        private final int num;

        public Acao(int num) {
            this.num = num;
        }
        @Override
        public void actionPerformed(ActionEvent e) {
            if (jCheckBox[num].isSelected()) {
                controller.addCidade(num);
            } else {
                controller.removeCidade(num);
            }
            try {
                controller.criarRota();
            } catch (IOException ex) {
                Logger.getLogger(ListaCidadesJPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
}
